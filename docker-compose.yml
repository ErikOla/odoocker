services:
  odoo:
    build:
      context: ./
      dockerfile: ./odoo/Dockerfile
      args:
        - ODOO_TAG
        - ODOO_RC
        - ROOT_PATH
        - GITHUB_USER
        - GITHUB_ACCESS_TOKEN
        - ENTERPRISE_ADDONS
        - THIRD_PARTY_ADDONS
        - LOG_PATH
    depends_on:
      - postgres
    tty: true
    volumes:
      - odoo-data:${DATA_DIR}
      - ./odoo/extra-addons:${EXTRA_ADDONS}
      - ./odoo/custom-addons:${CUSTOM_ADDONS}
      - ./odoo/entrypoint.sh:/entrypoint.sh
      - ./odoo/odoorc.sh:/odoorc.sh
      - ./odoo/third-party-addons.sh:/third-party-addons.sh
    env_file:
      - ./.env
    networks:
      - internal

  postgres:
    build: 
      context: ./
      dockerfile: ./postgres/Dockerfile
      args:
        - POSTGRES_TAG
    restart: unless-stopped
    tty: true
    volumes:
      - pg-data:${PGDATA}
      - ./postgres/entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - PGDATA
      - DB_USER
      - DB_TEMPLATE
      - UNACCENT_TEMPLATE
      - PGADMING_DB_NAME
      - PGADMING_DB_USER
      - PGADMIN_DB_PASSWORD
    networks:
      - internal

  redis:
    image: eqalpha/keydb:latest
    platform: linux/amd64
    ports:
      - 6379:6379
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - redis-data:/var/lib/keydb

  nginx:
    image: nginx:${NGINX_TAG}
    depends_on:
      - odoo
    restart: unless-stopped
    tty: true
    expose:
      - 80/tcp
    volumes:
      - ./nginx/nginx.conf:${NGINX_CONF}
      - ./nginx/default.conf:${NGINX_DEFAULT_CONF}
    environment:
      - VIRTUAL_HOST
      - LETSENCRYPT_HOST
      - LETSENCRYPT_EMAIL
      - CORS_ALLOWED_DOMAIN
    networks:
      - internal

  nginx-proxy:
    image: nginxproxy/nginx-proxy:${NGINX_PROXY_TAG}
    depends_on:
      - nginx
    restart: unless-stopped
    tty: true
    volumes:
      - ./nginx-proxy/nginx.conf:${NGINX_CONF}
      - ./nginx-proxy/cors.conf:${NGINX_PROXY_CORS_CONF}
      - certs:${NGINX_CERTS}:ro
      - vhost:${NGINX_VHOST}
      - html:${NGINX_HTML}
      - ${DOCKER_SOCK}:${TEMP_DOCKER_SOCK}:ro
    environment:
      - TRUST_DOWNSTREAM_PROXY
      - CORS_ALLOWED_DOMAIN
    networks:
      - internal

volumes:
  odoo-data:
  pg-data:
  redis-data:
  certs:
  vhost:
  html:

networks:
  internal:
    driver: bridge
