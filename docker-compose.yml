services:
  odoo:
    build:
      context: ./
      dockerfile: ./odoo/Dockerfile
      args:
        - ODOO_TAG
        - ODOO_RC
        - ROOT_PATH
        - GITHUB_USER
        - GITHUB_ACCESS_TOKEN
        - ENTERPRISE_ADDONS
        - LOG_PATH
    depends_on:
      - postgres
    tty: true
    volumes:
      - data-dir:${DATA_DIR}
      - ./odoo/extra-addons:${EXTRA_ADDONS}
      - ./odoo/custom-addons:${CUSTOM_ADDONS}
      - ./odoo/entrypoint.sh:/entrypoint.sh
      - ./odoo/odoorc.sh:/odoorc.sh
    env_file:
      - ./.env
    networks:
      - internal

  postgres:
    build: 
      context: ./postgres
      dockerfile: Dockerfile
      args:
        - POSTGRES_TAG
    restart: unless-stopped
    shm_size: 1GB
    tty: true
    volumes:
      - pg-data:${PGDATA}
      - ./postgres/entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - PGDATA
    networks:
      - internal

  nginx:
    image: nginx:${NGINX_TAG}
    depends_on:
      - odoo
    restart: unless-stopped
    tty: true
    expose:
      - 80/tcp
    volumes:
      - ./nginx/nginx.conf:${NGINX_CONF}
      - ./nginx/default.conf:${NGINX_DEFAULT_CONF}
    environment:
      - VIRTUAL_HOST
      - LETSENCRYPT_HOST
      - LETSENCRYPT_EMAIL
      - CORS_ALLOWED_DOMAIN
    networks:
      - internal

  nginx-proxy:
    image: nginxproxy/nginx-proxy:${NGINX_PROXY_TAG}
    depends_on:
      - nginx
    restart: unless-stopped
    tty: true
    volumes:
      - ./nginx-proxy/nginx.conf:${NGINX_CONF}
      - ./nginx-proxy/cors.conf:${NGINX_PROXY_CORS_CONF}
      - certs:${NGINX_CERTS}:ro
      - vhost:${NGINX_VHOST}
      - html:${NGINX_HTML}
      - ${DOCKER_SOCK}:${TEMP_DOCKER_SOCK}:ro
    environment:
      - TRUST_DOWNSTREAM_PROXY
      - CORS_ALLOWED_DOMAIN
    networks:
      - internal

  keydb:
    image: eqalpha/keydb:latest
    platform: linux/amd64    
    shm_size: 1GB
    restart: unless-stopped
    networks:
      - internal
    # command: keydb-server /etc/keydb/keydb.conf
    volumes:
      #- ./keydb.conf:/etc/keydb/keydb.conf:ro
      - cache-db-data:/var/lib/keydb

volumes:
  data-dir:
  pg-data:
  certs:
  vhost:
  html:
  cache-db-data:


networks:
  internal:
    driver: bridge
